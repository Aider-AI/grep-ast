import os

PARSERS = {
    ".as": "actionscript",
    ".adb": "ada",
    ".ads": "ada",
    ".agda": "agda",
    ".ino": "arduino",
    ".s": "asm",
    ".asm": "asm",
    ".astro": "astro",
    ".sh": "bash",
    ".bash": "bash",
    ".beancount": "beancount",
    ".bib": "bibtex",
    ".bicep": "bicep",
    ".bb": "bitbake",
    ".c": "c",
    ".h": "c",
    ".cairo": "cairo",
    ".capnp": "capnp",
    ".chatito": "chatito",
    ".clar": "clarity",
    ".clj": "clojure",
    ".cljs": "clojure",
    ".cmake": "cmake",
    ".cmake.in": "cmake",
    ".lisp": "commonlisp",
    ".cl": "commonlisp",
    ".cpon": "cpon",
    ".cpp": "cpp",
    ".cc": "cpp",
    ".hpp": "cpp",
    ".hh": "cpp",
    ".cs": "csharp",
    ".css": "css",
    ".csv": "csv",
    ".cu": "cuda",
    ".cuh": "cuda",
    ".d": "d",
    ".dart": "dart",
    ".dockerfile": "dockerfile",
    ".dox": "doxygen",
    ".dtd": "dtd",
    ".el": "elisp",
    ".ex": "elixir",
    ".exs": "elixir",
    ".elm": "elm",
    ".erb": "embeddedtemplate",  # ERB (Embedded Ruby) templates
    ".ejs": "embeddedtemplate",  # EJS (Embedded JavaScript) templates
    ".erl": "erlang",
    ".hrl": "erlang",
    ".fnl": "fennel",
    ".fir": "firrtl",
    ".fish": "fish",
    ".f90": "fortran",
    ".f95": "fortran",
    ".f03": "fortran",
    ".f08": "fortran",
    ".fun": "func",
    ".gd": "gdscript",
    ".gitattributes": "gitattributes",
    ".gitcommit": "gitcommit",
    ".gitignore": "gitignore",
    ".gleam": "gleam",
    ".glsl": "glsl",
    ".gn": "gn",
    ".go": "go",
    ".mod": "gomod",
    ".sum": "gosum",
    ".groovy": "groovy",
    ".launch": "gstlaunch",
    ".hack": "hack",
    ".ha": "hare",
    ".hs": "haskell",
    ".hx": "haxe",
    ".hcl": "hcl",
    ".tf": "hcl",
    ".heex": "heex",
    ".hlsl": "hlsl",
    ".html": "html",
    ".htm": "html",
    ".hypr": "hyprlang",
    ".ispc": "ispc",
    ".janet": "janet",
    ".java": "java",
    ".js": "javascript",
    ".mjs": "javascript",  # mjs file extension stands for "module JavaScript."
    ".jsdoc": "jsdoc",
    ".json": "json",
    ".jsonnet": "jsonnet",
    ".jl": "julia",
    ".kconfig": "kconfig",
    ".kdl": "kdl",
    ".kt": "kotlin",
    ".ld": "linkerscript",
    ".ll": "llvm",
    ".lua": "lua",
    ".luadoc": "luadoc",
    # ".???": "luap",  # "luap" is not a standalone language
    ".luau": "luau",
    ".magik": "magik",
    ".mk": "make",
    ".makefile": "make",
    ".md": "markdown",  # TODO: verify that markdown grammar used by Goldziherâ€™s tree-sitter languages pack doesn't suffer from https://github.com/ikatyang/tree-sitter-markdown/issues/59
    # ".m": "matlab",  # both matlab and objc use ".m" extension; we choose to map to objc
    ".mermaid": "mermaid",
    ".mmd": "mermaid",
    ".meson": "meson",
    ".ninja": "ninja",
    ".nix": "nix",
    ".nqc": "nqc",
    ".m": "objc",
    ".mm": "objc",
    ".odin": "odin",
    ".org": "org",
    ".pas": "pascal",
    ".pem": "pem",
    ".pl": "perl",
    ".pm": "perl",
    ".pgn": "pgn",
    ".php": "php",
    ".po": "po",
    ".pony": "pony",
    ".ps1": "powershell",
    ".psm1": "powershell",
    ".printf": "printf",
    ".prisma": "prisma",
    ".properties": "properties",
    ".psv": "psv",
    ".pp": "puppet",
    ".purs": "purescript",
    ".in": "pymanifest",
    ".py": "python",
    ".qmldir": "qmldir",
    ".qml": "qmljs",
    ".r": "r",
    ".R": "r",
    ".rkt": "racket",
    # ".???": "re2c",  # re2c is not a standalone language
    ".inputrc": "readline",
    ".requirements": "requirements",
    ".ron": "ron",
    ".rst": "rst",
    ".rb": "ruby",
    ".rs": "rust",
    ".scala": "scala",
    ".sc": "scala",
    ".scm": "scheme",
    ".ss": "scheme",
    ".scss": "scss",
    ".smali": "smali",
    ".smithy": "smithy",
    ".sol": "solidity",
    ".sql": "sql",
    ".nut": "squirrel",
    ".star": "starlark",
    ".svelte": "svelte",
    ".swift": "swift",
    ".td": "tablegen",
    ".tcl": "tcl",
    ".thrift": "thrift",
    ".toml": "toml",
    ".tsv": "tsv",
    ".tsx": "tsx",
    ".twig": "twig",
    ".ts": "typescript",
    ".typ": "typst",
    ".rules": "udev",
    ".ungram": "ungrammar",
    ".tal": "uxntal",
    # ".v": "v", # ".v" is overloaded: vlang, verilog (and coq). vlang grammar has 24 stars as of 2024-08-22
    ".v": "verilog", # verilog grammar has 90 stars as of 2024-08-22
    ".sv": "verilog",
    ".svh": "verilog",
    ".vhd": "vhdl",
    ".vhdl": "vhdl",
    ".vim": "vim",
    ".vue": "vue",
    ".wgsl": "wgsl",
    ".XCompose": "xcompose",
    ".xml": "xml",
    ".yaml": "yaml",
    ".yml": "yaml",
    ".yuck": "yuck",
    ".zig": "zig",
}


def filename_to_lang(filename):
    file_extension = os.path.splitext(filename)[1]
    lang = PARSERS.get(file_extension)
    return lang
